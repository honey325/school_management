datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model users {
  id             Int          @id @default(autoincrement())
  roleId         Int
  fname          String
  lname          String
  email          String       @unique
  dob            DateTime
  class          Int
  grno           String?      @unique
  contact        String
  salary         Int?
  joiningDate    DateTime
  addr           String?
  password       String?
  activationCode String
  isActive       Boolean
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  isDelete       Boolean      @default(false)
  subTeacher     subTeacher[]
  attendance     attendance[]
  result         result[]
}

model role {
  id        Int      @id @default(autoincrement())
  role      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDelete  Boolean  @default(false)
}

model subjects {
  id          Int          @id @default(autoincrement())
  class       Int
  name        String
  description String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  isDelete    Boolean      @default(false)
  subTeacher  subTeacher[]
  result      result[]

  @@unique([class, name])
}

model subTeacher {
  subjects  subjects @relation(fields: [subId], references: [id])
  subId     Int
  users     users    @relation(fields: [teacherId], references: [id])
  teacherId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDelete  Boolean  @default(false)

  @@id([subId, teacherId])
}

model attendance {
  id        Int      @id @default(autoincrement())
  student   users    @relation(fields: [stdId], references: [id])
  stdId     Int
  attDate   DateTime
  present   Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDelete  Boolean  @default(false)

  @@unique([stdId, attDate])
}

model exams {
  id         Int      @id @default(autoincrement())
  examName   String
  examDate   DateTime
  totalMarks Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  isDelete   Boolean  @default(false)
  result     result[]
}

model result {
  student       users    @relation(fields: [stdId], references: [id])
  stdId         Int
  subjects      subjects @relation(fields: [subId], references: [id])
  subId         Int
  exams         exams    @relation(fields: [examId], references: [id])
  examId        Int
  examdate      DateTime
  obtainedMarks Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  isDelete      Boolean  @default(false)

  @@id([stdId, subId])
}
